/**************************************************************************************
 * Given a non-negative integer represented as a non-empty array of digits, plus one to the integer.
 *
 * You may assume the integer do not contain any leading zero, except the number 0 itself. 
 *
 * The digits are stored such that the most significant digit is at the head of the list. 
 *
 * Subscribe to see which companies asked this question.
 **************************************************************************************/

public class Solution {
    public int[] plusOne(int[] digits) {         
        int len = digits.length;
        int[] newDigits = new int[len + 1];
        if(len == 0)
        {
            newDigits[0] = 1;
            return newDigits;
        }
        int carry = 0;
        if (digits[len - 1] != 9)
            digits[len - 1] ++;
        else{
            carry = 1;
            digits[len - 1] = 0;
        }
        int i = len -2;
        while (carry != 0 && i >= 0){
            if (digits[i] == 9){
                carry = 1;
                digits[i] = 0;
            }else {
                digits[i] += carry;
                carry = 0;
            }
            i--;
        }
        if (digits[0] == 0)
        {
            for (i = 0; i < len;i++)
                newDigits[i+1] = digits[i];
            newDigits[0] = 1;
            return newDigits;
        }
        return digits;
    }
}
