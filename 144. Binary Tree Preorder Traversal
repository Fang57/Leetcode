/**************************************************************************************
 * Given a binary tree, return the preorder traversal of its nodes' values.
 *
 * For example:
 * Given binary tree {1,#,2,3},
 *  1
 *   \
 *    2
 *   /
 *  3
 * return [1,2,3]. 
 *
 * Note: Recursive solution is trivial, could you do it iteratively?
 * 
 * Subscribe to see which companies asked this question.
 **************************************************************************************/
 
 /**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    
    public List<Integer> preorderTraversal(TreeNode root) {

        List<Integer> list= new ArrayList<Integer>();
        preOrder(root,list);
        return list;
    }
    public static void preOrder(TreeNode treeNode,List<Integer> list){
    
        if (treeNode == null) return;
        list.add(treeNode.val);
        preOrder(treeNode.left,list);
        preOrder(treeNode.right,list);

    }
}
