/*************************************************************************************** 
 *
 * Given an integer, write a function to determine if it is a power of three.
 * 
 * Follow up:
 * Could you do it without using any loop / recursion?
 * 
 * Credits:
 * Special thanks to @dietpepsi for adding this problem and creating all test cases.
 *
 ***************************************************************************************/

class Solution {//方法一：循环
public:
    bool isPowerOfThree(int n) {
        while((n%3==0)&&(n!=0)){
            n = n/3;
        }
        if(n==1) return true;
        else return false;
    }
};

class Solution {//方法二：换底公式
public:
    bool isPowerOfThree(int n) {
        if(n<=0) return false;
        double a = log10(n) / log10(3);
        
        if(a - (int)a == 0)
            return true;
        else return false;
    }
};

class Solution {//方法三：3的19次方的除数（int型能表示的最大正整数为MaxInt==2147483647）
public:
    bool isPowerOfThree(int n) {
        return n > 0 && 1162261467 % n == 0;
    }
};
