/**************************************************************************************
 * Given a binary tree, determine if it is height-balanced.
 *
 * For this problem, a height-balanced binary tree is defined as a binary tree 
 * in which the depth of the two subtrees of every node never differ by more than 1.
 * 
 * Subscribe to see which companies asked this question.
 **************************************************************************************/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */

public class Solution {
    private static final int UNBALANCED = -99;
    public boolean isBalanced(TreeNode root) {
         if (root == null) {
            return true;
        }
        return height(root) != UNBALANCED;
    }
    public int height(TreeNode root){
        if (root == null) {
            return -1;
        }
        int left = height(root.left);
        int right = height(root.right);
        if (left == UNBALANCED || right == UNBALANCED || Math.abs(left-right) > 1) {
            return UNBALANCED;
        }
        return 1 + Math.max(left,right);
    }
}
