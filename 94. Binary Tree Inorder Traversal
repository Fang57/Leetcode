/**************************************************************************************
 * Given a binary tree, return the inorder traversal of its nodes' values.
 *
 * For example:
 * Given binary tree [1,null,2,3],
 *   1
 *    \
 *     2
 *    /
 *   3
 * return [1,3,2].
 * 
 * Note: Recursive solution is trivial, could you do it iteratively?
 * 
 * Subscribe to see which companies asked this question.
 **************************************************************************************/
 
 /**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> list= new ArrayList<Integer>();
        InOrder(root, list);
        return list;
    }
     public void InOrder(TreeNode treeNode, List<Integer> list) {
        if (treeNode == null) return;
        InOrder(treeNode.left, list);
        list.add(treeNode.val);
        InOrder(treeNode.right, list);
    }
}
