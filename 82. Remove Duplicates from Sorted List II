/**************************************************************************************
 * Given a sorted linked list, delete all nodes that have duplicate numbers,
 * leaving only distinct numbers from the original list.
 * 
 * For example,
 * Given 1->2->3->3->4->4->5, return 1->2->5.
 * Given 1->1->1->2->3, return 2->3.
 * 
 * Subscribe to see which companies asked this question.
 **************************************************************************************/
 
 /**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        
        if (head == null) return null;
        ListNode slow = new ListNode(0);
        ListNode s = slow;

        slow.next = head;
        ListNode fast = head;

        while (fast != null) {
            while (fast.next!=null && fast.val == fast.next.val){
                fast = fast.next;
            }

            if (slow.next == fast)
                slow = slow.next;
            else
            {
                slow.next = fast.next;
            }
            fast = fast.next;
        }
        return s.next;
    }
}
