/**************************************************************************************
 * Given a binary tree, return all root-to-leaf paths.
 * 
 * For example, given the following binary tree:
 * 
 *    1
 *  /   \
 * 2     3
 * 
 * \
 *   5
 * All root-to-leaf paths are:
 * 
 * ["1->2->5", "1->3"]
 **************************************************************************************/
 
 /**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> list = new ArrayList<>();
        if (root != null) {
            traversal(root, list, "");
        }
        return list;
    }
    
    public void traversal(TreeNode root, List<String> list, String path) {
        if (root.left == null && root.right == null) {
            list.add(path + root.val);
        }
        if (root.left != null) {
            traversal(root.left, list, path + root.val + "->");
        }
        if (root.right != null) {
            traversal(root.right, list, path + root.val + "->");
        }
    }
}
