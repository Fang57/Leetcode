
/**************************************************************************************
 * Given an array with n objects colored red, white or blue, sort them so that objects of the same color are adjacent,
 * with the colors in the order red, white and blue.
 * 
 * Here, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.
 * 
 * Note:
 * You are not suppose to use the library's sort function for this problem.
 **************************************************************************************/
 
/**
 * 法一
 */
 public class Solution {
    public void sortColors(int[] nums) {
         int num0 = 0;
        int num1 = 0;
        int num2 = 0;
        for(int i = 0; i < nums.length; i++) {
            if (nums[i] == 0) ++num0;
            else if (nums[i] == 1) ++num1;
            else if (nums[i] == 2) ++num2;
        }
        for(int i = 0; i < num0; ++i) nums[i] = 0;
        for(int i = num0; i < num0 + num1; ++i) nums[i] = 1;
        for(int i = num0 + num1; i < num0 + num1 + num2; ++i) nums[i] = 2;
    }
}


/**
 * 法二
 */
 public class Solution {
    public void sortColors(int[] nums) {
int twoIndex = nums.length - 1;
        int zeroIndex = 0;

        for (int i = 0; i <= twoIndex; i++) {
            {

                while (nums[i] == 2 && i < twoIndex) {
                    nums[i] = nums[twoIndex];
                    nums[twoIndex] = 2;
                    twoIndex--;
                }
                while (nums[i] == 0 && i > zeroIndex ) {
                    nums[i] = nums[zeroIndex];
                    nums[zeroIndex] = 0;
                    zeroIndex++;
                }
            }
        }
    }
}
