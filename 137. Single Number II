/**************************************************************************************
 * Given an array of integers, every element appears three times except for one, 
 * which appears exactly once. Find that single one.
 *
 * Note:
 * Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?
 *
 * Subscribe to see which companies asked this question.
 **************************************************************************************/
 /**
  * 位运算，时间复杂度O(n),
  * 解析见：http://blog.csdn.net/u012959498/article/details/60571015
  */
  public class Solution {
      public int singleNumber(int[] nums) {
          int ones = 0, twos = 0;
          for (int i = 0 ;i < nums.length;i++)
          {
              ones = (ones ^ nums[i]) & (~twos);
              twos = (twos ^ nums[i]) & (~ones);
          }
          return ones;
      }
  }
