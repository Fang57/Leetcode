题目1 : Queen Attack
时间限制:10000ms
单点时限:1000ms
内存限制:256MB
描述
There are N queens in an infinite chessboard. We say two queens may attack each other if they are in the same vertical line, horizontal line or diagonal line even if there are other queens sitting between them.

Now given the positions of the queens, find out how many pairs may attack each other?

输入
The first line contains an integer N.

Then N lines follow. Each line contains 2 integers Ri and Ci indicating there is a queen in the Ri-th row and Ci-th column.  

No two queens share the same position.  

For 80% of the data, 1 <= N <= 1000

For 100% of the data, 1 <= N <= 100000, 0 <= Ri, Ci <= 1000000000

输出
One integer, the number of pairs may attack each other.

样例输入
5  
1 1  
2 2  
3 3   
1 3
3 1
样例输出
10

import java.util.Scanner;

import static java.lang.Math.abs;

/**
 * Created by sherry on 2017/4/8.
 */
public class queen {

    public static class Pos{
        int x;
        int y;
        Pos(int x, int y){
            this.x = x;
            this.y = y;
        }
    }

    public static void main(String[] arg) {
        int count = 0;
        Scanner input = new Scanner(System.in);
        int n = input.nextInt();
        if (n <= 1) System.out.println(count);
        Pos pos[] = new Pos[n];
        int x;
        int y;
        for (int i = 0;i < n;i++){
            x = input.nextInt();
            y = input.nextInt();
            pos[i] = new Pos(x,y);
        }
        for(int i = 0 ; i < n ; i++)
        {
            for(int j = i + 1 ; j < n ; j++)
            {
                if((abs(pos[j].x-pos[i].x)) == 0 || abs(pos[j].y-pos[i].y) == 0) //如果两个皇后在一条斜线上，则此种排列不符合条件，直接返回
                {
                    count++;
                }
                if((abs(pos[j].x-pos[i].x)) == abs(pos[j].y-pos[i].y)) //如果两个皇后在一条斜线上，则此种排列不符合条件，直接返回
                {
                    count++;
                }
            }
        }
        System.out.println(count);
    }
}
