/**************************************************************************************
 * Reverse a singly linked list.
 *
 * click to show more hints.
 * 
 * Hint:
 * A linked list can be reversed either iteratively or recursively. Could you implement both?
 * 
 * Subscribe to see which companies asked this question.
 **************************************************************************************/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
 
/**
 * 方法一：递归
 */
public class Solution {
    public ListNode reverseList(ListNode head) {
        if(head==null || head.next==null)
            return head;
        ListNode nextNodes=head.next;
        ListNode newHead=reverseList(nextNodes);
        nextNodes.next=head;
        head.next=null;
        return newHead;
    }
}

/**
 * 方法二：栈
 */
 public class Solution {
    public ListNode reverseList(ListNode head) {
        LinkedList<Integer> stack = new LinkedList<>();
        ListNode p = head;
        ListNode index = head;
        ListNode q = new ListNode(0);
        q.next = head;
        while (p != null){
            stack.push(p.val);
            p = p.next;
        }
        while (stack.size() > 0)
        {
            index.val = stack.pop();
            if (stack.size() == 0) break;
            index = index.next;
        }
        return q.next;
    }
}
